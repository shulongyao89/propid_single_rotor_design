function createPROPIDOptimizerFile(filename,input)

fid = fopen(filename,'w');

fprintf(fid,'# Basic input\n');
fprintf(fid,'MODE 1.0            # wind turbine\n');
fprintf(fid,'INCV 0.0            # wind turbine mode (use TSR in analysis)\n');
fprintf(fid,'LTIP 1.0            # use tip loss model\n');
fprintf(fid,'LHUB 1.0            # use hub loss model\n');
fprintf(fid,'IBR 1.0             # use brake state model\n');
fprintf(fid,'ISTL 1.0            # use viterna stall model\n');
fprintf(fid,'USEAP  1.0          # use swirl suppression\n');
fprintf(fid,'WEXP 0.0000         # boundary layer wind exponent\n');
fprintf(fid,'NS_NSEC 10.0  1.0   # number of blade elements/number of sectors\n');
fprintf(fid,'IS1   1.0           # first segment used in analysis\n');
fprintf(fid,'IS2  10.0           # last segment used in analysis\n');
fprintf(fid,'BE_DATA 1           # printout blade element data\n');
fprintf(fid,'SH 0.0              # no shaft tilt effects on crossflow\n');
fprintf(fid,'HH 1.352            # normalized hub height\n');
fprintf(fid,'BN %d                # blade number\n',input.blades);
fprintf(fid,'CONE %3.1f           # cone angle of rotor (deg)\n',input.cone_deg);
fprintf(fid,'\n');
fprintf(fid,sprintf('RHO        %7.6f\n',input.rho_slugspft3));
fprintf(fid,'HUB     0.025039978\n');
fprintf(fid,'RD    650.560186\n');
fprintf(fid,'CH_TW\n');
fprintf(fid,'    0.030584      6.0000\n');
fprintf(fid,'    0.044776     23.6093\n');
fprintf(fid,'    0.059529      7.1220\n');
fprintf(fid,'    0.045378      3.3471\n');
fprintf(fid,'    0.036526      1.5636\n');
fprintf(fid,'    0.030610      0.3926\n');
fprintf(fid,'    0.025539      0.1454\n');
fprintf(fid,'    0.021462      0.0000\n');
fprintf(fid,'    0.019205     -0.4037\n');
fprintf(fid,'    0.014010     -0.6540\n');
fprintf(fid,'AIRFOIL_MODE    4\n');
fprintf(fid,' 10\n');
fprintf(fid,'F1_v1/cylinder-type4.pd\n');
fprintf(fid,'  1.000  0.100  3.000\n');
fprintf(fid,'F1_v1/F1-4846-1226_cylinder_blend.pd\n');
fprintf(fid,'  0.743 14.750  3.000\n');
fprintf(fid,'F1_v1/F1-4846-1226.pd\n');
fprintf(fid,'  0.485 14.500  3.000\n');
fprintf(fid,'F1_v1/F1-3856-0738.pd\n');
fprintf(fid,'  0.386 16.000  3.000\n');
fprintf(fid,'F1_v1/F1-2655-0262_F1-3856-0738_blend.pd\n');
fprintf(fid,'  0.326 16.000  3.000\n');
fprintf(fid,'F1_v1/F1-2655-0262.pd\n');
fprintf(fid,'  0.266 15.500  3.000\n');
fprintf(fid,'F1_v1/F1-2040-0087_F1-2655-0262_blend.pd\n');
fprintf(fid,'  0.235 14.250  3.000\n');
fprintf(fid,'F1_v1/F1-2040-0087.pd\n');
fprintf(fid,'  0.204 14.250  3.000\n');
fprintf(fid,'F1_v1/F1-1882-0041_F1-2040-0087_blend.pd\n');
fprintf(fid,'  0.196 11.750  3.000\n');
fprintf(fid,'F1_v1/F1-1882-0041.pd\n');
fprintf(fid,'  0.188 11.750  3.000\n');
fprintf(fid,'AIRFOIL_FAMILY   12\n');
fprintf(fid,'    0.0000   1    1.0000\n');
fprintf(fid,'    0.062519989   1    0.9383\n');
fprintf(fid,'    0.1500   2    0.8500\n');
fprintf(fid,'    0.2500   3    0.7500\n');
fprintf(fid,'    0.3500   4    0.6500\n');
fprintf(fid,'    0.4500   5    0.5500\n');
fprintf(fid,'    0.5500   6    0.4500\n');
fprintf(fid,'    0.6500   7    0.3500\n');
fprintf(fid,'    0.7500   8    0.2500\n');
fprintf(fid,'    0.8500   9    0.1500\n');
fprintf(fid,'    0.9500  10    0.0500\n');
fprintf(fid,'    1.0000  10    0.0000\n');
fprintf(fid,'USE_AIRFOIL_FAMILY    1\n');
fprintf(fid,'\n');
fprintf(fid,'# Two design points with wind speeds (mph) that do not change.\n');
fprintf(fid,'# The RPM of both lines is iterated to achieve a fixed TSR.\n');
fprintf(fid,'# The blade pitch of the first line is iterated for Cl(8).\n');
fprintf(fid,'# The blade pitch for the second DP is not used, hence 999.\n');
fprintf(fid,'#        RPM     pitch    speed   mph\n');
fprintf(fid,'DP   1   7.5488260   0.8416886  %9.7f  2\n',input.Vavg_mph);
fprintf(fid,'DP   2  10.0355599 999.0000000  %9.7f  2\n',input.Vrated_mph);
fprintf(fid,'\n');
fprintf(fid,'# Enforce tip loss model to always be on\n');
fprintf(fid,'TIPON\n');
fprintf(fid,'# Use the Prandtl tip loss model,\n');
fprintf(fid,'# not the original modified model.\n');
fprintf(fid,'TIPMODE 2\n');
fprintf(fid,'\n');
fprintf(fid,'# Use this for automatic convergence\n');
fprintf(fid,'ITERMAX 200\n');
fprintf(fid,'TOLSP1 %5.3f\n',input.tol1);
fprintf(fid,'TOLSP2 %5.3f\n',input.tol2);
fprintf(fid,'\n');
fprintf(fid,'# Stage 1 - Avg wind speed RPM\n');
fprintf(fid,'# Iterate on the RPM(DP1) to get a tip speed of \n');
fprintf(fid,'# Specify a tip speed (TSR * wind speed) \n');
fprintf(fid,'# to be consistent with the design tip speed ratio of 9.5\n');
fprintf(fid,'# and the given wind speed (DP1).  For the first design\n');
fprintf(fid,'# point with a avg wind speed of 19.014 mph,\n');
fprintf(fid,'# tip speed is (ft/sec)\n');
fprintf(fid,'# 9.5 / cos(0.0) * (19.014 * 88 / 60) = 264.93\n');
fprintf(fid,'NEWT1IDP 207 %6.2f  1 999 1      1 2 1\n',input.Vavg_tip_ftps);
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 2 - Rated wind speed RPM\n');
fprintf(fid,'# Do the same thing for the second design point, iterating\n');
fprintf(fid,'# on its RPM to yield a TSR of 9.5\n');
fprintf(fid,'# For DP2, the rated wind speed is 25.277. Hence the tip speed is\n');
fprintf(fid,'# 9.5 / cos(0.0) * (25.277 * 88 / 60) = 352.19\n');
fprintf(fid,'NEWT1IDP 207 %6.2f  2 999 2      1 2 2\n',input.Vrated_tip_ftps);
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 3.5 \n');
fprintf(fid,'# Specify rated bending moment to be at 25.277 mph (DP2)\n');
fprintf(fid,'# Iterate on rotor chord\n');
fprintf(fid,'#NEWT1IDP 203 %12.3f 2 1 2  1 7 999 1.00\n',input.moment_ftlb);
fprintf(fid,'#IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 3\n');
fprintf(fid,'# Specify the rated power to be 15087.00 kW (15.087 MW)\n');
fprintf(fid,'# at 25.277 mph (DP2).\n');
fprintf(fid,'# Iterate on the rotor scale.\n');
fprintf(fid,'# Remember to also update the FIXPD line below to \n');
fprintf(fid,'# crop the power curve at this set level.\n');
fprintf(fid,'NEWT1IDP 200  %9.2f 2 1 2     1 1 999    1.05\n',input.power_kW);
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 4\n');
fprintf(fid,'# Iterate on pitch to get cl(r/R=.75) = 1.25\n');
fprintf(fid,'#>>line> NEWT1LDP <IFTP1(.)> <JSEGIX1(.)> <FNEWT1(.)> -\n');
fprintf(fid,'#                 <KDPRPM1(.)> <KDPFL1(.)> <KDPXJ1(.)> -\n');
fprintf(fid,'#                 <ITP1(.)> <ITP2(.)> <ITP3(.)> -\n');
fprintf(fid,'#                 | <CLAMP1(.)> | <TOL1(.)>\n');
fprintf(fid,'#  Using --->      500   local Cl of blade\n');
fprintf(fid,'#                  501   local a\n');
fprintf(fid,'NEWT1LDP 500 8 %4.2f   1 1 1   1 3 1   .75\n',input.Cl_rR75pct);
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 5\n');
fprintf(fid,'# Iterate on twist to get cl 9-10\n');
fprintf(fid,'#>>line> NEWT2SDDP IFTP2(.) JSEGIX2(.) JSEGIX3(.) JSEGREL(.) KADJSBS(.)\n');
fprintf(fid,'#>>line> <SSS(1)> <SSF(1)>\n');
fprintf(fid,'#>>line> ...\n');
fprintf(fid,'#>>line> <SSS(KADJSBS(.))> <SSF(KADJSBS(.))>\n');
fprintf(fid,'#>>line> KDPRPM2(.) KDPFL2(.) KDPXJ2(.) ISDTP(.) ISCHED2(.) | CLAMP2(.) | TOL2(.)\n');
fprintf(fid,'#  Using --->      100 Cl dist\n');
fprintf(fid,'#                  101 a  dist\n');
fprintf(fid,'NEWT2SDDP 100   9 10 8   2\n');
fprintf(fid,'1 -.05\n');
fprintf(fid,'2 -.10\n');
fprintf(fid,'1 1 1   2 100   .75\n');
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 6\n');
fprintf(fid,'# Iterate on twist to get cl 2-7\n');
fprintf(fid,'#>>line> NEWT2SDDP IFTP2(.) JSEGIX2(.) JSEGIX3(.) JSEGREL(.) KADJSBS(.)\n');
fprintf(fid,'#>>line> <SSS(1)> <SSF(1)>\n');
fprintf(fid,'#>>line> ...\n');
fprintf(fid,'#>>line> <SSS(KADJSBS(.))> <SSF(KADJSBS(.))>\n');
fprintf(fid,'#>>line> KDPRPM2(.) KDPFL2(.) KDPXJ2(.) ISDTP(.) ISCHED2(.) | CLAMP2(.) | TOL2(.)\n');
fprintf(fid,'#  Using --->      100 Cl dist\n');
fprintf(fid,'#                  101 a  dist\n');
fprintf(fid,'NEWT2SDDP 100   3 7 8   5\n');
fprintf(fid,'1 .25\n');
fprintf(fid,'2 .20\n');
fprintf(fid,'3 .15\n');
fprintf(fid,'4 .10\n');
fprintf(fid,'5 .05\n');
fprintf(fid,'1 1 1   2 100   .75\n');
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 7\n');
fprintf(fid,'# Iterate on chord uniformly to get axial inflow(r/R=.75) = .333\n');
fprintf(fid,'#>>line> NEWT1LDP <IFTP1(.)> <JSEGIX1(.)> <FNEWT1(.)> -\n');
fprintf(fid,'#                 <KDPRPM1(.)> <KDPFL1(.)> <KDPXJ1(.)> -\n');
fprintf(fid,'#                 <ITP1(.)> <ITP2(.)> <ITP3(.)> -\n');
fprintf(fid,'#                 | <CLAMP1(.)> | <TOL1(.)>\n');
fprintf(fid,'#                  500   local Cl of blade\n');
fprintf(fid,'#  Using --->      501   local a\n');
fprintf(fid,'NEWT1LDP 501 8 %5.4f   1 1 1   2 999 100   .02\n',input.axialind);
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 8\n');
fprintf(fid,'# Iterate on chord to get axial inflow 9-10\n');
fprintf(fid,'#>>line> NEWT2SDDP IFTP2(.) JSEGIX2(.) JSEGIX3(.) JSEGREL(.) KADJSBS(.)\n');
fprintf(fid,'#>>line> <SSS(1)> <SSF(1)>\n');
fprintf(fid,'#>>line> ...\n');
fprintf(fid,'#>>line> <SSS(KADJSBS(.))> <SSF(KADJSBS(.))>\n');
fprintf(fid,'#>>line> KDPRPM2(.) KDPFL2(.) KDPXJ2(.) ISDTP(.) ISCHED2(.) | CLAMP2(.) | TOL2(.)\n');
fprintf(fid,'#                  100 Cl dist\n');
fprintf(fid,'#  Using --->      101 a  dist\n');
fprintf(fid,'NEWT2SDDP 101   9 10 8   2\n');
fprintf(fid,'1 .00  \n');
fprintf(fid,'2 .00  \n');
fprintf(fid,'1 1 1   1 100   .02\n');
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Stage 9\n');
fprintf(fid,'# Iterate on chord to get axial inflow 2-7\n');
fprintf(fid,'#>>line> NEWT2SDDP IFTP2(.) JSEGIX2(.) JSEGIX3(.) JSEGREL(.) KADJSBS(.)\n');
fprintf(fid,'#>>line> <SSS(1)> <SSF(1)>\n');
fprintf(fid,'#>>line> ...\n');
fprintf(fid,'#>>line> <SSS(KADJSBS(.))> <SSF(KADJSBS(.))>\n');
fprintf(fid,'#>>line> KDPRPM2(.) KDPFL2(.) KDPXJ2(.) ISDTP(.) ISCHED2(.) | CLAMP2(.) | TOL2(.)\n');
fprintf(fid,'#                  100 Cl dist\n');
fprintf(fid,'#  Using --->      101 a  dist\n');
fprintf(fid,'NEWT2SDDP 101   5 7 8   2\n');
% fprintf(fid,'#1 -.045\n');
% fprintf(fid,'#2 -.030 \n');
% fprintf(fid,'#3 -.015 \n');
fprintf(fid,'1 0.00 \n');
fprintf(fid,'2 0.00 \n');
fprintf(fid,'1 1 1   1 100   .02\n');
fprintf(fid,'IDES\n');
fprintf(fid,'\n');
fprintf(fid,'# Special lines for variable speed turbines\n');
fprintf(fid,'LCOL45\n');
fprintf(fid,'VS_MODE\n');
fprintf(fid,'\n');
fprintf(fid,'# Determine cp curve at avg wind speed\n');
fprintf(fid,'PITCH_DP 1\n');
fprintf(fid,'TSR_SWEEP .5  14 .125\n');
fprintf(fid,'WIND_SWEEP %6.3f  %6.3f  1  2\n',input.Vavg_mph,input.Vavg_mph);
fprintf(fid,'2D_SWEEP\n');
fprintf(fid,'# 45 - cp vs TSR\n');
fprintf(fid,'WRITE_FILES  45\n');
fprintf(fid,'\n');
fprintf(fid,'# Determine the rotor power and thrust curves (2D_SWEEP)\n');
fprintf(fid,'FIXPD %9.2f 1\n',input.power_kW);
fprintf(fid,'PITCH_DP 1\n');
fprintf(fid,'TSR_SWEEP %2.1f  %2.1f 0\n',input.TSR,input.TSR);
fprintf(fid,'WIND_SWEEP 5  60  0.25  2\n');
fprintf(fid,'2D_SWEEP\n');
fprintf(fid,'# write out \n');
fprintf(fid,'# 40 - power curve (kW) vs wind speed (mph)\n');
fprintf(fid,'# 45 - Cp vs TSR\n');
fprintf(fid,'# 51 - rotor thrust curve\n');
fprintf(fid,'WRITE_FILES  40 51\n');
fprintf(fid,'\n');
fprintf(fid,'# Obtain aero distributions along the blade (1D_SWEEP)\n');
fprintf(fid,'#\n');
fprintf(fid,'PITCH_DP 1\n');
fprintf(fid,'RPM_DP 1\n');
fprintf(fid,'WIND_DP 1\n');
fprintf(fid,'1D_SWEEP\n');
fprintf(fid,'# write out\n');
fprintf(fid,'# 75 - blade l/d  dist\n');
fprintf(fid,'# 76 - blade Re   dist (Reynolds number)\n');
fprintf(fid,'# 80 - blade alfa dist\n');
fprintf(fid,'# 85 - blade cl   dist\n');
fprintf(fid,'# 90 - blade a    dist\n');
fprintf(fid,'WRITE_FILES 75 76 80 85 90 96 14\n');
fprintf(fid,'\n');
fprintf(fid,'# Write out \n');
fprintf(fid,'#  94 - chord (non)\n');
fprintf(fid,'#  95 - chord dist (ft-ft)\n');
fprintf(fid,'#  97 - blade t    dist (physical thickness)\n');
fprintf(fid,'#  99 - alfa  dist (ft-deg)\n');
fprintf(fid,'# 100 - twist (non)\n');
fprintf(fid,'WRITE_FILES 95 99 97 94 100\n');
fprintf(fid,'\n');
fprintf(fid,'# Obtain bending load at rated wind speed\n');
fprintf(fid,'# Compute the gross annual energy production (kwh/yr)\n');
fprintf(fid,'RKR_GAMMA 2.167 0.8856\n');
fprintf(fid,'# Output the data to file: gaep.dat\n');
fprintf(fid,'#\n');
fprintf(fid,'# Initial avg wind speed - 8.75 m/s (19.57319 mph)\n');
fprintf(fid,'# Final avg wind speed - 8.75 m/s (19.57319 mph)\n');
fprintf(fid,'# Step - 0.5 m/s (1.11847 mph)\n');
fprintf(fid,'# Cutout - 25 m/s (55.923 mph)\n');
fprintf(fid,'#\n');
fprintf(fid,'# 94.4 pct efficiency\n');
fprintf(fid,'GAEP  %6.4f %6.4f 1.11847 55.923 0.944\n',input.Vavg_mph,input.Vavg_mph);
fprintf(fid,'\n');
fprintf(fid,'# Compute bending moments and power\n');
fprintf(fid,'REPORT_START\n');
fprintf(fid,'REPORT_GEOMETRY 1\n');
fprintf(fid,'REPORT_GEOMETRY 2\n');
fprintf(fid,'REPORT_GEOMETRY 3\n');
fprintf(fid,'REPORT_SEPARATOR\n');
fprintf(fid,'REPORT_1IDP 200 2 1 2\n');
fprintf(fid,'REPORT_IDP 203\n');
fprintf(fid,'REPORT_SEPARATOR\n');
fprintf(fid,'REPORT_END\n');
fprintf(fid,'\n');
fprintf(fid,'SUMMARY_INFO\n');
fprintf(fid,'\n');
fprintf(fid,'# Write out the rotor design parameters to file ftn021.dat\n');
fprintf(fid,'WRITE_FILES 05 06 11\n');
fprintf(fid,'DUMP_PROPID\n');
fprintf(fid,'\n');
fprintf(fid,'*\n');
fclose(fid)


